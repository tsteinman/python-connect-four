board = [[0,0,0,0,0,0,0] for i in range(6)]
next_space = {1:6, 2:6, 3:6, 4:6, 5:6, 6:6 , 7:6}
class Player:
    def __init__(self, name, color):
        self.color = color
        self.name = name

    def add_chip(self, column):
        board[next_space[column]-1][column-1] = self.color
        next_space[column] -= 1
        print(board)
        self.check_horizontal(column)
        self.check_vertical(column)
        self.check_diag(column)

    def check_horizontal(self, column):
        count = 0
        for item in board[next_space[column]]:
            if item == self.color:
                count += 1
                if count == 4:
                    print("{} WINS!".format(self.name.upper()))
            else:
                count = 0

    def check_vertical(self, column):
        count = 0
        current_column = []
        for i in range(6):
            current_column.append(board[i][column-1])
        for item in current_column:
            if item == self.color:
                count += 1
                if count == 4:
                    print("{} WINS!".format(self.name.upper()))
            else:
                count = 0

    def get_diag_rising(self, column):
        current_diagL = []
        current_diagR = []
        i = 0
        while next_space[column]+i <= 5 and next_space[column]+i >= 0 and column-i <= 7 and column-i >= 1:
            current_diagL.append(board[next_space[column]+i][column-1-i])
            #print(i)
            #print(next_space[column]+i)
            #print(column-i)
            i += 1
        current_diagL_reversed = [current_diagL[i] for i in range(len(current_diagL)-1,-1,-1)]
        #print(current_diagL_reversed)
        i = 1
        while next_space[column]-i <= 5 and next_space[column]-i >= 0 and column+i <= 7 and column+i >= 1:
            current_diagR.append(board[next_space[column]-i][column-1+i])
            #print(i)
            #print(next_space[column]-i)
            #print(column+i)
            i += 1
        #print(current_diagR)
        return current_diagL_reversed + current_diagR
        

    def check_diag(self, column):
        diag_list = self.get_diag_rising(column)
        #print(diag_list)
        count = 0
        current_column = []
        for i in range(0, len(diag_list)):
            current_column.append(diag_list[i])
        for item in current_column:
            if item == self.color:
                count += 1
                if count == 4:
                    print("{} WINS!".format(self.name.upper()))
            else:
                count = 0


player1 = Player("Player 1", "b")
player2 = Player("Player 2", "r")


player1.add_chip(1)
player1.add_chip(2)
player1.add_chip(2)
player1.add_chip(3)
player1.add_chip(3)
player1.add_chip(3)
player2.add_chip(4)
player1.add_chip(4)
player1.add_chip(4)
player1.add_chip(4)
